// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCharging.Infrastructures.Data.Commons;

#nullable disable

namespace SmartCharging.Endpoints.WebApi.Migrations
{
    [DbContext(typeof(SmartChargingDbContext))]
    partial class SmartChargingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.ChargeStation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GroupItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupItemId");

                    b.ToTable("ChargeStations", (string)null);
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.Connector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChargeStationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Identifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChargeStationId");

                    b.ToTable("Connectors", (string)null);
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.GroupItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.ChargeStation", b =>
                {
                    b.HasOne("SmartCharging.Core.Domain.GroupItemAggregate.GroupItem", null)
                        .WithMany("ChargeStations")
                        .HasForeignKey("GroupItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.Connector", b =>
                {
                    b.HasOne("SmartCharging.Core.Domain.GroupItemAggregate.ChargeStation", null)
                        .WithMany("Connectors")
                        .HasForeignKey("ChargeStationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("SmartCharging.Core.Domain.GroupItemAggregate.ValueObjects.CapacityInAmps", "MaxCurrentInAmps", b1 =>
                        {
                            b1.Property<Guid>("ConnectorId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("MaxCurrentInAmps");

                            b1.HasKey("ConnectorId");

                            b1.ToTable("Connectors");

                            b1.WithOwner()
                                .HasForeignKey("ConnectorId");
                        });

                    b.Navigation("MaxCurrentInAmps");
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.GroupItem", b =>
                {
                    b.OwnsOne("SmartCharging.Core.Domain.GroupItemAggregate.ValueObjects.CapacityInAmps", "CapacityInAmps", b1 =>
                        {
                            b1.Property<Guid>("GroupItemId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("CapacityInAmps");

                            b1.HasKey("GroupItemId");

                            b1.ToTable("Groups");

                            b1.WithOwner()
                                .HasForeignKey("GroupItemId");
                        });

                    b.Navigation("CapacityInAmps");
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.ChargeStation", b =>
                {
                    b.Navigation("Connectors");
                });

            modelBuilder.Entity("SmartCharging.Core.Domain.GroupItemAggregate.GroupItem", b =>
                {
                    b.Navigation("ChargeStations");
                });
#pragma warning restore 612, 618
        }
    }
}
